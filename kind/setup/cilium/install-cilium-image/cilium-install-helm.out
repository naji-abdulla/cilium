install.go:149: [debug] Original chart version: "1.11.1"
install.go:166: [debug] CHART PATH: /root/.cache/helm/repository/cilium-1.11.1.tgz

NAME: cilium
LAST DEPLOYED: Sun Feb  6 13:34:10 2022
NAMESPACE: kube-system
STATUS: pending-install
REVISION: 1
TEST SUITE: None
USER-SUPPLIED VALUES:
bpf:
  masquerade: false
externalIPs:
  enabled: true
hostPort:
  enabled: true
hostServices:
  enabled: false
image:
  pullPolicy: Never
ipam:
  mode: kubernetes
kubeProxyReplacement: partial
nodePort:
  enabled: true

COMPUTED VALUES:
affinity:
  nodeAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/os
          operator: In
          values:
          - linux
      - matchExpressions:
        - key: beta.kubernetes.io/os
          operator: In
          values:
          - linux
  podAntiAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
    - labelSelector:
        matchExpressions:
        - key: k8s-app
          operator: In
          values:
          - cilium
      topologyKey: kubernetes.io/hostname
agent: true
alibabacloud:
  enabled: false
autoDirectNodeRoutes: false
azure:
  enabled: false
bandwidthManager: false
bgp:
  announce:
    loadbalancerIP: false
    podCIDR: false
  enabled: false
bpf:
  clockProbe: false
  lbExternalClusterIP: false
  lbMapMax: 65536
  masquerade: false
  monitorAggregation: medium
  monitorFlags: all
  monitorInterval: 5s
  policyMapMax: 16384
  preallocateMaps: false
certgen:
  image:
    pullPolicy: IfNotPresent
    repository: quay.io/cilium/certgen
    tag: v0.1.5
  podLabels: {}
  ttlSecondsAfterFinished: 1800
cgroup:
  autoMount:
    enabled: true
  hostRoot: /run/cilium/cgroupv2
cleanBpfState: false
cleanState: false
cluster:
  id: null
  name: default
clustermesh:
  apiserver:
    etcd:
      image:
        pullPolicy: IfNotPresent
        repository: quay.io/coreos/etcd
        tag: v3.4.13
    image:
      digest: sha256:5732f2ce99096d1c740f3805260dbcfefbe6d7d18d1ac07707ff4ef9536b0ec6
      pullPolicy: IfNotPresent
      repository: quay.io/cilium/clustermesh-apiserver
      tag: v1.11.1
      useDigest: true
    nodeSelector: {}
    podAnnotations: {}
    podLabels: {}
    priorityClassName: ""
    replicas: 1
    resources: {}
    service:
      annotations: {}
      nodePort: 32379
      type: NodePort
    tls:
      admin:
        cert: ""
        key: ""
      auto:
        certManagerIssuerRef: {}
        certValidityDuration: 1095
        enabled: true
        method: helm
      ca:
        cert: ""
        key: ""
      client:
        cert: ""
        key: ""
      remote:
        cert: ""
        key: ""
      server:
        cert: ""
        extraDnsNames: []
        extraIpAddresses: []
        key: ""
    tolerations: []
    updateStrategy:
      rollingUpdate:
        maxUnavailable: 1
      type: RollingUpdate
  useAPIServer: false
cni:
  binPath: /opt/cni/bin
  chainingMode: none
  confFileMountPath: /tmp/cni-configuration
  confPath: /etc/cni/net.d
  configMapKey: cni-config
  customConf: false
  exclusive: true
  hostConfDirMountPath: /host/etc/cni/net.d
  install: true
containerRuntime:
  integration: none
customCalls:
  enabled: false
daemon:
  runPath: /var/run/cilium
datapathMode: veth
debug:
  enabled: false
disableEndpointCRD: "false"
egressGateway:
  enabled: false
enableCiliumEndpointSlice: false
enableCnpStatusUpdates: false
enableCriticalPriorityClass: true
enableIPv4Masquerade: true
enableIPv6Masquerade: true
enableK8sEventHandover: false
enableK8sTerminatingEndpoint: true
enableXTSocketFallback: true
encryption:
  enabled: false
  interface: ""
  ipsec:
    interface: ""
    keyFile: ""
    mountPath: ""
    secretName: ""
  keyFile: keys
  mountPath: /etc/ipsec
  nodeEncryption: false
  secretName: cilium-ipsec-keys
  type: ipsec
  wireguard:
    userspaceFallback: false
endpointHealthChecking:
  enabled: true
endpointRoutes:
  enabled: false
endpointStatus:
  enabled: false
  status: ""
eni:
  awsReleaseExcessIPs: false
  ec2APIEndpoint: ""
  enabled: false
  eniTags: {}
  iamRole: ""
  subnetIDsFilter: ""
  subnetTagsFilter: ""
  updateEC2AdapterLimitViaAPI: false
etcd:
  clusterDomain: cluster.local
  enabled: false
  endpoints:
  - https://CHANGE-ME:2379
  extraArgs: []
  extraConfigmapMounts: []
  extraHostPathMounts: []
  extraInitContainers: []
  image:
    pullPolicy: IfNotPresent
    repository: quay.io/cilium/cilium-etcd-operator
    tag: v2.0.7
  k8sService: false
  nodeSelector: {}
  podAnnotations: {}
  podDisruptionBudget:
    enabled: true
    maxUnavailable: 2
  podLabels: {}
  priorityClassName: ""
  resources: {}
  securityContext: {}
  ssl: false
  tolerations:
  - operator: Exists
  updateStrategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
externalIPs:
  enabled: true
externalWorkloads:
  enabled: false
extraArgs: []
extraConfig: {}
extraConfigmapMounts: []
extraEnv: {}
extraHostPathMounts: []
extraInitContainers: []
gke:
  enabled: false
healthChecking: true
healthPort: 9876
hostFirewall:
  enabled: false
hostPort:
  enabled: true
hostServices:
  enabled: false
  protocols: tcp,udp
hubble:
  enabled: true
  listenAddress: :4244
  metrics:
    enabled: null
    port: 9091
    serviceAnnotations: {}
    serviceMonitor:
      enabled: false
      labels: {}
  relay:
    dialTimeout: null
    enabled: false
    image:
      digest: sha256:23d40b2a87a5bf94e0365bd9606721c96f78b8304b61725dca45a0b8a6048203
      pullPolicy: IfNotPresent
      repository: quay.io/cilium/hubble-relay
      tag: v1.11.1
      useDigest: true
    listenHost: ""
    listenPort: "4245"
    nodeSelector: {}
    podAnnotations: {}
    podLabels: {}
    priorityClassName: ""
    replicas: 1
    resources: {}
    retryTimeout: null
    rollOutPods: false
    sortBufferDrainTimeout: null
    sortBufferLenMax: null
    tls:
      client:
        cert: ""
        key: ""
      server:
        cert: ""
        enabled: false
        extraDnsNames: []
        extraIpAddresses: []
        key: ""
    tolerations: []
    updateStrategy:
      rollingUpdate:
        maxUnavailable: 1
      type: RollingUpdate
  socketPath: /var/run/cilium/hubble.sock
  tls:
    auto:
      certManagerIssuerRef: {}
      certValidityDuration: 1095
      enabled: true
      method: helm
      schedule: 0 0 1 */4 *
    ca:
      cert: ""
      key: ""
    enabled: true
    server:
      cert: ""
      extraDnsNames: []
      extraIpAddresses: []
      key: ""
  ui:
    backend:
      image:
        pullPolicy: IfNotPresent
        repository: quay.io/cilium/hubble-ui-backend
        tag: v0.8.5@sha256:2bce50cf6c32719d072706f7ceccad654bfa907b2745a496da99610776fe31ed
      resources: {}
    enabled: false
    frontend:
      image:
        pullPolicy: IfNotPresent
        repository: quay.io/cilium/hubble-ui
        tag: v0.8.5@sha256:4eaca1ec1741043cfba6066a165b3bf251590cf4ac66371c4f63fbed2224ebb4
      resources: {}
    ingress:
      annotations: {}
      enabled: false
      hosts:
      - chart-example.local
      tls: []
    nodeSelector: {}
    podAnnotations: {}
    podLabels: {}
    priorityClassName: ""
    proxy:
      image:
        pullPolicy: IfNotPresent
        repository: docker.io/envoyproxy/envoy
        tag: v1.18.4@sha256:e5c2bb2870d0e59ce917a5100311813b4ede96ce4eb0c6bfa879e3fbe3e83935
      resources: {}
    replicas: 1
    rollOutPods: false
    securityContext:
      enabled: true
    standalone:
      enabled: false
      tls:
        certsVolume: {}
    tls:
      client:
        cert: ""
        key: ""
    tolerations: []
    updateStrategy:
      rollingUpdate:
        maxUnavailable: 1
      type: RollingUpdate
identityAllocationMode: crd
image:
  digest: sha256:251ff274acf22fd2067b29a31e9fda94253d2961c061577203621583d7e85bd2
  pullPolicy: Never
  repository: quay.io/cilium/cilium
  tag: v1.11.1
  useDigest: true
imagePullSecrets: null
installIptablesRules: true
installNoConntrackIptablesRules: false
ipMasqAgent:
  enabled: false
ipam:
  mode: kubernetes
  operator:
    clusterPoolIPv4MaskSize: 24
    clusterPoolIPv4PodCIDR: 10.0.0.0/8
    clusterPoolIPv4PodCIDRList: []
    clusterPoolIPv6MaskSize: 120
    clusterPoolIPv6PodCIDR: fd00::/104
    clusterPoolIPv6PodCIDRList: []
ipv4:
  enabled: true
ipv6:
  enabled: false
ipvlan:
  enabled: false
k8s: {}
keepDeprecatedLabels: false
keepDeprecatedProbes: false
kubeProxyReplacement: partial
kubeProxyReplacementHealthzBindAddr: ""
l2NeighDiscovery:
  arping-refresh-period: 30s
  enabled: true
l7Proxy: true
livenessProbe:
  failureThreshold: 10
  periodSeconds: 30
localRedirectPolicy: false
logSystemLoad: false
maglev: {}
monitor:
  enabled: false
name: cilium
nodePort:
  autoProtectPortRange: true
  bindProtection: true
  enableHealthCheck: true
  enabled: true
nodeinit:
  bootstrapFile: /tmp/cilium-bootstrap-time
  enabled: false
  extraConfigmapMounts: []
  extraEnv: {}
  extraHostPathMounts: []
  extraInitContainers: []
  image:
    pullPolicy: IfNotPresent
    repository: quay.io/cilium/startup-script
    tag: 62bfbe88c17778aad7bef9fa57ff9e2d4a9ba0d8
  nodeSelector: {}
  podAnnotations: {}
  podDisruptionBudget:
    enabled: true
    maxUnavailable: 2
  podLabels: {}
  priorityClassName: ""
  resources:
    requests:
      cpu: 100m
      memory: 100Mi
  securityContext: {}
  tolerations:
  - operator: Exists
  updateStrategy:
    type: RollingUpdate
operator:
  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
      - labelSelector:
          matchExpressions:
          - key: io.cilium/app
            operator: In
            values:
            - operator
        topologyKey: kubernetes.io/hostname
  enabled: true
  endpointGCInterval: 5m0s
  extraArgs: []
  extraConfigmapMounts: []
  extraEnv: {}
  extraHostPathMounts: []
  extraInitContainers: []
  identityGCInterval: 15m0s
  identityHeartbeatTimeout: 30m0s
  image:
    alibabacloudDigest: sha256:e4b52b5579167da21fd72ec596f72f9dd7a38963a9bccf855c58af33b1b984c4
    awsDigest: sha256:61895007b65fdc703614c92072d8e81fd0562c02dd605c411a088c355840ea50
    azureDigest: sha256:dbe0da6d8cd82d036bd8d1162140c203f1375ae5a6084a09f704ddc42485f0fb
    genericDigest: sha256:977240a4783c7be821e215ead515da3093a10f4a7baea9f803511a2c2b44a235
    pullPolicy: IfNotPresent
    repository: quay.io/cilium/operator
    suffix: ""
    tag: v1.11.1
    useDigest: true
  nodeSelector: {}
  podAnnotations: {}
  podDisruptionBudget:
    enabled: false
    maxUnavailable: 1
  podLabels: {}
  priorityClassName: ""
  prometheus:
    enabled: false
    port: 6942
    serviceMonitor:
      enabled: false
      labels: {}
  replicas: 2
  resources: {}
  rollOutPods: false
  securityContext: {}
  serviceAccountName: cilium-operator
  skipCRDCreation: false
  tolerations:
  - operator: Exists
  updateStrategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
podAnnotations: {}
podDisruptionBudget:
  enabled: true
  maxUnavailable: 2
podLabels: {}
policyEnforcementMode: default
pprof:
  enabled: false
preflight:
  enabled: false
  extraConfigmapMounts: []
  extraEnv: {}
  extraHostPathMounts: []
  extraInitContainers: []
  image:
    digest: sha256:251ff274acf22fd2067b29a31e9fda94253d2961c061577203621583d7e85bd2
    pullPolicy: IfNotPresent
    repository: quay.io/cilium/cilium
    tag: v1.11.1
    useDigest: true
  nodeSelector: {}
  podAnnotations: {}
  podDisruptionBudget:
    enabled: true
    maxUnavailable: 2
  podLabels: {}
  priorityClassName: ""
  resources: {}
  securityContext: {}
  tofqdnsPreCache: ""
  tolerations:
  - effect: NoSchedule
    key: node.kubernetes.io/not-ready
  - effect: NoSchedule
    key: node-role.kubernetes.io/master
  - effect: NoSchedule
    key: node.cloudprovider.kubernetes.io/uninitialized
    value: "true"
  - key: CriticalAddonsOnly
    operator: Exists
  updateStrategy:
    type: RollingUpdate
  validateCNPs: true
priorityClassName: ""
prometheus:
  enabled: false
  metrics: null
  port: 9090
  serviceMonitor:
    enabled: false
    labels: {}
proxy:
  prometheus:
    enabled: true
    port: "9095"
  sidecarImageRegex: cilium/istio_proxy
rbac:
  create: true
readinessProbe:
  failureThreshold: 3
  periodSeconds: 30
remoteNodeIdentity: true
resourceQuotas:
  cilium:
    hard:
      pods: 10k
  enabled: false
  operator:
    hard:
      pods: "15"
resources: {}
rollOutCiliumPods: false
securityContext: {}
serviceAccounts:
  cilium:
    annotations: {}
    create: true
    name: cilium
  clustermeshApiserver:
    annotations: {}
    create: true
    name: clustermesh-apiserver
  clustermeshcertgen:
    annotations: {}
    create: true
    name: clustermesh-apiserver-generate-certs
  etcd:
    annotations: {}
    create: true
    name: cilium-etcd-operator
  hubblecertgen:
    annotations: {}
    create: true
    name: hubble-generate-certs
  operator:
    annotations: {}
    create: true
    name: cilium-operator
  preflight:
    annotations: {}
    create: true
    name: cilium-pre-flight
  relay:
    annotations: {}
    create: true
    name: hubble-relay
  ui:
    annotations: {}
    create: true
    name: hubble-ui
sleepAfterInit: false
sockops:
  enabled: false
startupProbe:
  failureThreshold: 105
  periodSeconds: 2
tls:
  enabled: true
  secretsBackend: local
tolerations:
- operator: Exists
tunnel: vxlan
updateStrategy:
  rollingUpdate:
    maxUnavailable: 2
  type: RollingUpdate
wellKnownIdentities:
  enabled: false

HOOKS:
MANIFEST:
---
# Source: cilium/templates/hubble/tls-helm/ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-ca-secret
  namespace: kube-system
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURDVENDQWZHZ0F3SUJBZ0lSQU5hYlc1cFRFc0Y2UHpwNmd3Q1A0Z3d3RFFZSktvWklodmNOQVFFTEJRQXcKSGpFY01Cb0dBMVVFQXhNVGFIVmlZbXhsTFdOaExtTnBiR2wxYlM1cGJ6QWVGdzB5TWpBeU1EWXlNVE0wTVRCYQpGdzB5TlRBeU1EVXlNVE0wTVRCYU1CNHhIREFhQmdOVkJBTVRFMmgxWW1Kc1pTMWpZUzVqYVd4cGRXMHVhVzh3CmdnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUURnTWZpeGdkaHRPN3JKN0tmQ1lsc0oKRzA0WWdNR1VFMUl0TnBVU0IrWlQrWjNMaWlFRHpGcGZzWERTRzF1VU9BVThPZ3NZcGRVaEtTbFFubWdFQnAzNgo3TTAwSVM5clgxN000WTg1c245VHErSDNwN2MySVRCZXQ0dWpXb1Roak1kWFRtQVlqTklSOXRvOVlCcjZXUHZKClJLOTQ0c0YwSmJ6OU5ZNEl6UTdpRFhEdG1NcnorTVJaZVNYQVA3R1NaREdaTk5MNVBkeng5cVlZdC9mWmRzUm8KQTlCdWRDTjlsc1FlMld6bWJmV0swN1RpNEowb2VMOG9LbGo0L1BnOTY4QzZkT1NaUFFlSkpRNXlmM2Y4VVREMQpxS1B5ZmhzdG1oSzJuR3duYUtiM2VNTzNsb0svMENtQmhDMmF0aElyZmtTa292a1V2dEJ6ZEUwVHRKa3ZaNks5CkFnTUJBQUdqUWpCQU1BNEdBMVVkRHdFQi93UUVBd0lDcERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUkKS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBbkpkTApPdlRtQVVRdHZvMjA1eDJudzI0cGxsY1NVS1NsWTNyWCtrcDlXa1N4UXFkcXZBSngvbTVFajFGeWhtV0JhVUl6CjY4cHVxb0tPUmNUd2h3a2RtSm5NSDlCNE5GdjZ4eGQvenJITThzZjVTTGRNNVg4S0VnbUNjVVdycjhwd211T1kKWGVIK3FhUTVWaFhRRUdRRTJNVUdDSDZxS1lET3Ztd2JqQTlCbzd2WERIU0Z6TUozdS94dW1jVWZBZEc1MlZZbwprRmZ0bTVER0p5b2JwMDNrZXdrN0ZXdnlvUVZ4UlhxcjEraFRJODNNdU5QaHRxZ0ZXcUZUS0NTbFhqZG1mZ1JyCkd4NEpqWHJlZUZ6R2MxWFQyNFhWR2wxTjJxazZjd0tHcFBPWDB4bHlSMFJEZnZCZ1JqeGZVR21ldmNtTnUxVksKODhscWIyL2tiaWFVemZ1QmF3PT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBNERINHNZSFliVHU2eWV5bndtSmJDUnRPR0lEQmxCTlNMVGFWRWdmbVUvbWR5NG9oCkE4eGFYN0Z3MGh0YmxEZ0ZQRG9MR0tYVklTa3BVSjVvQkFhZCt1ek5OQ0V2YTE5ZXpPR1BPYkovVTZ2aDk2ZTMKTmlFd1hyZUxvMXFFNFl6SFYwNWdHSXpTRWZiYVBXQWErbGo3eVVTdmVPTEJkQ1c4L1RXT0NNME80ZzF3N1pqSwo4L2pFV1hrbHdEK3hrbVF4bVRUUytUM2M4ZmFtR0xmMzJYYkVhQVBRYm5RamZaYkVIdGxzNW0zMWl0TzA0dUNkCktIaS9LQ3BZK1B6NFBldkF1blRrbVQwSGlTVU9jbjkzL0ZFdzlhaWo4bjRiTFpvU3RweHNKMmltOTNqRHQ1YUMKdjlBcGdZUXRtcllTSzM1RXBLTDVGTDdRYzNSTkU3U1pMMmVpdlFJREFRQUJBb0lCQVFDdlJzSTgzTnY4d25iTgpTVVQ2MXZSL1VTYWtSMzJRSys3U1JGc1ZSckhQTTFjbmV5MUdqK3lUNWVEamt0bnRMa01CakF1QzBKdXBHa29mCnFraDk1VUo3bThqdW1ZYytOY2lpK3pHRGxVYXdmcS9pYysvcjFOVEJLRlIyZU4xc2pTaUgzRkdLd0FXNFg3ck4Kd3lZMFZYODhJb1BoU2I2ZTlLWWxmRW80SFVFbWZvOFJnMW9ndm1hQ0F6Mks0cHJzcUNEelEwMFJWNU52eFdpNwo0bzZ6NURCcUM3S0ZIWUFjaFV1ZFFZSEZ0MDdDcDcyS3B5OHl0c0JlWXZ2cUU0dmJodWxDWlg0c25sQkdZa3ZHClR3ajBMUWNxcitPa2d4T1R2b24vQStNeDdKd0s4TldPRnNRdElMTEdkQ0NLTEtraGF4WktTdmhQNWRHdno1c24KZkk5T3Q3SnRBb0dCQU80LzRFZHlUSkZWUnVCWFdFS2dsMW5XVHZMN0lFcThvN24xczJtNzQyOStRN1RZc2FNNwpGbFZ2K2pvdWsrL2NMYTBhbUNRRlJqbWFPMFFNZkJkSS9tNUxBVEhqUXV5NnBNWHdKV0tEZzlCTUY3Q1M3cEJOClNkZzJhbzRJQzNDRmZEVThVTXk5N3EvZU00V2pNWHAwckRDM1dGN0ZxUlRWcW1kV3E3b2U1MTBqQW9HQkFQRG0KQ2JlQTQvemFmTjZVRmt1amhEZWV2aWw1OEJTQjVQUlFmUXpVNnliVjBIUC9QbElGNkkrNStTWXplMTVEYmJTQwp0R3A2aFAzZkxhNFQ3c0V4djg1VVREMGV5ZTRZY0pnQ092MXl2SnBkK2I1STNsY1FoeWo5bXREV2l1OVBGUmRqClVyQzA2c0VCY0FJczEra3dtMFRXOU0wL2JqaVQ4YjVwVDhRaDdhNmZBb0dCQU5iVXBGRG9ZT0IveTh4SkZsM2wKM3ZQMENmYVJ1Vm1LNWZ1dDhOeTd2bVp2clcrcUlldTFRUHREWUpnTUhmdWdSMU9hOG1zd2tsVW9uSjVNdjZ4agpkb0ZQZ3NGUVVxMlIwemhreGVFaUE3N1VqbHY2OGNFTzRESmxSd25SZVRjNk5uanViVkZoUnBRd3diYVVJKzV1CnZFR2xZYnI3Y3U1RmlFVnNZcWNPYk1PUEFvR0FERlVLYkUxNTNtamsrWlFGTEN3Ynlha2p2UVhVQjRpNnl0TVEKQThjbW5wOVZnNHF1aXc1b1lHczUyUDNMdEFDcHJoTCszM0NVUEZiZmhNamFjU04xMlQ4eGcvTitqT1ROWnNxKwpjRmtlVkp5NCswZkpzaFZUaGdLdG1VRlNiWHZUN1pXVkZ4eTc0OU9LQTJKK1R4N0E1QjVJKy9UaVZKMG1SQVFxCkpEVkVjS3NDZ1lBSzFaUzF5alNWMGxGK0hwcUdONUJOekpFaWl1ZlRZbnFic0U0QXoyZTVCS3E3ZGFsUHI2VEcKa1F2bzBIdWtubzJvWmMwUG9GdDZ4MmJGZWpsamswVHhOUzhFNFlqNzNPbTFTbkRDWFExNjZoWW1wN2E2RTd5WQo0S0gxSWc1by9qaUVvck5FNnF1VkZvOThDOXRxakdmVzJEdHZ2Vi9UZEVHU1k2bVpjOUk3Q2c9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/hubble/tls-helm/server-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURDVENDQWZHZ0F3SUJBZ0lSQU5hYlc1cFRFc0Y2UHpwNmd3Q1A0Z3d3RFFZSktvWklodmNOQVFFTEJRQXcKSGpFY01Cb0dBMVVFQXhNVGFIVmlZbXhsTFdOaExtTnBiR2wxYlM1cGJ6QWVGdzB5TWpBeU1EWXlNVE0wTVRCYQpGdzB5TlRBeU1EVXlNVE0wTVRCYU1CNHhIREFhQmdOVkJBTVRFMmgxWW1Kc1pTMWpZUzVqYVd4cGRXMHVhVzh3CmdnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUURnTWZpeGdkaHRPN3JKN0tmQ1lsc0oKRzA0WWdNR1VFMUl0TnBVU0IrWlQrWjNMaWlFRHpGcGZzWERTRzF1VU9BVThPZ3NZcGRVaEtTbFFubWdFQnAzNgo3TTAwSVM5clgxN000WTg1c245VHErSDNwN2MySVRCZXQ0dWpXb1Roak1kWFRtQVlqTklSOXRvOVlCcjZXUHZKClJLOTQ0c0YwSmJ6OU5ZNEl6UTdpRFhEdG1NcnorTVJaZVNYQVA3R1NaREdaTk5MNVBkeng5cVlZdC9mWmRzUm8KQTlCdWRDTjlsc1FlMld6bWJmV0swN1RpNEowb2VMOG9LbGo0L1BnOTY4QzZkT1NaUFFlSkpRNXlmM2Y4VVREMQpxS1B5ZmhzdG1oSzJuR3duYUtiM2VNTzNsb0svMENtQmhDMmF0aElyZmtTa292a1V2dEJ6ZEUwVHRKa3ZaNks5CkFnTUJBQUdqUWpCQU1BNEdBMVVkRHdFQi93UUVBd0lDcERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUkKS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBbkpkTApPdlRtQVVRdHZvMjA1eDJudzI0cGxsY1NVS1NsWTNyWCtrcDlXa1N4UXFkcXZBSngvbTVFajFGeWhtV0JhVUl6CjY4cHVxb0tPUmNUd2h3a2RtSm5NSDlCNE5GdjZ4eGQvenJITThzZjVTTGRNNVg4S0VnbUNjVVdycjhwd211T1kKWGVIK3FhUTVWaFhRRUdRRTJNVUdDSDZxS1lET3Ztd2JqQTlCbzd2WERIU0Z6TUozdS94dW1jVWZBZEc1MlZZbwprRmZ0bTVER0p5b2JwMDNrZXdrN0ZXdnlvUVZ4UlhxcjEraFRJODNNdU5QaHRxZ0ZXcUZUS0NTbFhqZG1mZ1JyCkd4NEpqWHJlZUZ6R2MxWFQyNFhWR2wxTjJxazZjd0tHcFBPWDB4bHlSMFJEZnZCZ1JqeGZVR21ldmNtTnUxVksKODhscWIyL2tiaWFVemZ1QmF3PT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURQVENDQWlXZ0F3SUJBZ0lRQlRwTmt4UXVDbnRXNXRVdlNQRm44akFOQmdrcWhraUc5dzBCQVFzRkFEQWUKTVJ3d0dnWURWUVFERXhOb2RXSmliR1V0WTJFdVkybHNhWFZ0TG1sdk1CNFhEVEl5TURJd05qSXhNelF4TUZvWApEVEkxTURJd05USXhNelF4TUZvd0tqRW9NQ1lHQTFVRUF3d2ZLaTVrWldaaGRXeDBMbWgxWW1Kc1pTMW5jbkJqCkxtTnBiR2wxYlM1cGJ6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQUxUSjdqbk0KbVBiaGNHNHlpTzEwbG8wVmI3ZWlhZGJZNXpVa0x3Y0IzK2VFM3hwYTBSN1hVVGgwc2lnU0FsMUxyR1B0V00ybgorUElYRmFIcDdXNVI1M1pZZWZjSVdaV1dwcnBsc0liWUZKbUljdUtJT1lOYVlBWFIySWJVVXRpbWt6UWRyWnowCnYwS2lFdTlOMXNmMDNqbk5RNmlQbTJYNFdJVjFYYU9QdTJMMHdnU3lQOGF6S1lDQXJ2RVA4UkNLbUhEVzcyKzcKa3d2MCt1VVcxbFBzZUlsL1czWlZGTzZQU29zSGtOdjdUMXB3TWlleTdIbS85Tmt2VnRyVzh3ZGo4NXhXc1dpbwpJbWJucjk3UEZhUkNmOUVXOUd3OHh6VWN0bDE1WDdJUFNDOUN4QlMyZDhBcVA4K2M0ZEFLZkI3RUdsVXZVNkxoCkNRUDgveHhrQk8xeCtEOENBd0VBQWFOck1Ha3dEZ1lEVlIwUEFRSC9CQVFEQWdXZ01CMEdBMVVkSlFRV01CUUcKQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBTUJnTlZIUk1CQWY4RUFqQUFNQ29HQTFVZEVRUWpNQ0dDSHlvdQpaR1ZtWVhWc2RDNW9kV0ppYkdVdFozSndZeTVqYVd4cGRXMHVhVzh3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCCkFFSFJxcHJPemY1VmJUcFlpOEg1Zmw0OXFjY1hZR01WZTRIN2hRbUh3Qy83TTI2b0doWFhXODE3MlBsdktLbTgKd3ZSL2ZyKzVnd2Z5cWlmVVdzS1p0WXY5ZGNFRWJIamRtcFM1VW5yaW5qUmtYYUpqQ2RBdWk4UER0OEZNL25yagpuL2dwWitlQm9BYmpTbTMxRXZtWW8yOUVwSDcvRW1panF3Q3N5VkhqaDFjeURlQzdWOEpDWlF0Si9takpKV0JWCnlVRWVCT3U4d09QNXo0Uk9QSll6U3BQV1FmQmtlSnhXQndDUWlpRjRQZENZRkFMV1ZlRlRPRDhTY0dDZFJsTXQKaWticVI2aVl3U1VFc2JKUTRKYXFlRk9zYXFrZlVSQmpEUlh6MmlwWmIvSEcwQWFwcDFsWnBHVzJkUmYrTUEzYwp4eTVyMG1hc3QzN1dJNTQ0Z3ZSQWNqcz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdE1udU9jeVk5dUZ3YmpLSTdYU1dqUlZ2dDZKcDF0am5OU1F2QndIZjU0VGZHbHJSCkh0ZFJPSFN5S0JJQ1hVdXNZKzFZemFmNDhoY1ZvZW50YmxIbmRsaDU5d2habFphbXVtV3dodGdVbVloeTRvZzUKZzFwZ0JkSFlodFJTMkthVE5CMnRuUFMvUXFJUzcwM1d4L1RlT2MxRHFJK2JaZmhZaFhWZG80KzdZdlRDQkxJLwp4ck1wZ0lDdThRL3hFSXFZY05idmI3dVRDL1Q2NVJiV1UreDRpWDliZGxVVTdvOUtpd2VRMi90UFduQXlKN0xzCmViLzAyUzlXMnRiekIyUHpuRmF4YUtnaVp1ZXYzczhWcEVKLzBSYjBiRHpITlJ5MlhYbGZzZzlJTDBMRUZMWjMKd0NvL3o1emgwQXA4SHNRYVZTOVRvdUVKQS96L0hHUUU3WEg0UHdJREFRQUJBb0lCQUJkcm1XcnZjRmw3TnY5dgptSUY2ZXc1bjJvTWxqU1NDRU9HM2dFZ2VIQTE0RHhidzhPcFg1bk96Mm1pS2ZMZnRWN1hTUjVETTA5azQyRnFUClhXalBQM2I3VzBGL1dXdWhpcFBYSEprN1lOL0s1MmNsVXA0TGxTanIyR3NQRW5SeWo5dE9oUEV5VzV5Y05tdTkKMzdjanA2NUJReVNSQmdhZHQ0b0NmRkQyQzhaenl1dlplaFZSdnh0VmMweW02Z2JyYWcyV0l5aXZ4SHUrOHNBRApmcU1VZ25jeUtIL0VwK2xXUm8wb1R4TURjOEIzQVY4U2k0OU5XZlgrcXd5bTZIcTZMdHFsa21lQ2RHbTVrNFhkCjcvek5QT1ZNd3lSelRUM2RXcVk4Z2x3Z21Rck1HVnVLei83ZkxTanJsWjNVQVZxV29GeXg5Q3drUG9uWXNEalEKbVJHZDlmRUNnWUVBNEs5TkxNOTh4QkFLZFZxSEJkL0dnb3R4NzRSeTdSZW9QOGg1RjQyWmsrQmV1MmhzN2owQwpTQ3VvcFoyZmpYc2N2UUs3ekxXK25HZjNpMWJLZEN1OGlnaTZxZXEyd0xXdDJzZG9QZWpVUU5pTDI2aEpPSlhBCnZJUUl1NWdINUpSTUxMMWIwcXM4d3RwZTluaWZFYm9JeUJWNTZCcWlOZGdmQldvQVlUM2NPUXNDZ1lFQXpmeHUKWFA5clZSQlJIaFhWdW5mUzFNdWpWWGdDdDlIU1dzWVJ3VHJjZHlkRThGTDdvOFRYMmtrMll0bnV3c2VLNGt2ZAppUUV3U1RSWm1HV0kvbXF1TGVpZzRlTjVBejlPeUFXUlBneXZ2Mmd1TmpmM20xOUx6R1FNa3pKZEcvclExYlZ0Ck82MExoUWs5dU9JRHhobnozQ0VmdHJzeERmZWEyanRoV2V6RHhoMENnWUVBM1VVbWpyUERubDVodmxLcDJHb1oKVitTMkR2aDBLZlA3V04wNEM2OENpUFFVdHlGTzdZd2RuQytLeFpjbVV6SGtDbXdQd0xsWGZ6YVFQYVA2ZTArNwpQSUQrTzJvUUVsYVpZWFN4dnc1MVFXdEF5TkRCVXoxL2N1ZmdwY1pDTjZTb0pBTlQwM09ad2hkR0lCcUlKTy85CngvWUdlVU1KYmxkcHJXNUg4M3YxVGlNQ2dZQk9NOFR1bDZYM0lIKzdiVXk4UTF1T29GVTlVSmV2bEFCSnFDTDcKZWs1VENseVk1TmhXWDVnWGJtNHdiMDYvTWlTZkwzQkc0R1dsbFROaXNVR21YWGdOUStFNGdUVGpMN2pJSlp6egpzcnRTYnNvRW1aRHVzdXBEQ2NUZ2FXR0NDdUlZRUk0TTl2Q0ZySEY3Ykl0RVBYd2dtWTdCd0NXcWlOT0lnTHkvCitDeUhYUUtCZ0FrT25KMWF2aGFXSUp2RDZlUllCV3ZGK3hFcjdvOEZncTRsNXlYTWhCNXlSa0NFUFBIOGk4Q3kKSlhEM3d4MXo0S3NLb01oVndMSU8xT2l0VHNqNnJ4NzlJWTJYeXAxMU5wa2xoK2ZYNnVMcDg3MnQrTEE5YWF5ZAo2V0lGUk05RzJwam5kQ3VOWVRxbVFpaFlibGFkeFJZaVlGRTh1Sy9oK24zTHdrMjNRR0tZCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/cilium-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: cilium-config
  namespace: kube-system
data:

  # Identity allocation mode selects how identities are shared between cilium
  # nodes by setting how they are stored. The options are "crd" or "kvstore".
  # - "crd" stores identities in kubernetes as CRDs (custom resource definition).
  #   These can be queried with:
  #     kubectl get ciliumid
  # - "kvstore" stores identities in an etcd kvstore, that is
  #   configured below. Cilium versions before 1.6 supported only the kvstore
  #   backend. Upgrades from these older cilium versions should continue using
  #   the kvstore by commenting out the identity-allocation-mode below, or
  #   setting it to "kvstore".
  identity-allocation-mode: crd
  cilium-endpoint-gc-interval: "5m0s"
  # Disable the usage of CiliumEndpoint CRD
  disable-endpoint-crd: "false"

  # If you want to run cilium in debug mode change this value to true
  debug: "false"
  # The agent can be put into the following three policy enforcement modes
  # default, always and never.
  # https://docs.cilium.io/en/latest/policy/intro/#policy-enforcement-modes
  enable-policy: "default"

  # Enable IPv4 addressing. If enabled, all endpoints are allocated an IPv4
  # address.
  enable-ipv4: "true"

  # Enable IPv6 addressing. If enabled, all endpoints are allocated an IPv6
  # address.
  enable-ipv6: "false"
  # Users who wish to specify their own custom CNI configuration file must set
  # custom-cni-conf to "true", otherwise Cilium may overwrite the configuration.
  custom-cni-conf: "false"
  enable-bpf-clock-probe: "true"
  # If you want cilium monitor to aggregate tracing for packets, set this level
  # to "low", "medium", or "maximum". The higher the level, the less packets
  # that will be seen in monitor output.
  monitor-aggregation: medium

  # The monitor aggregation interval governs the typical time between monitor
  # notification events for each allowed connection.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-interval: 5s

  # The monitor aggregation flags determine which TCP flags which, upon the
  # first observation, cause monitor notifications to be generated.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-flags: all
  # Specifies the ratio (0.0-1.0) of total system memory to use for dynamic
  # sizing of the TCP CT, non-TCP CT, NAT and policy BPF maps.
  bpf-map-dynamic-size-ratio: "0.0025"
  # bpf-policy-map-max specifies the maximum number of entries in endpoint
  # policy map (per endpoint)
  bpf-policy-map-max: "16384"
  # bpf-lb-map-max specifies the maximum number of entries in bpf lb service,
  # backend and affinity maps.
  bpf-lb-map-max: "65536"
  # bpf-lb-bypass-fib-lookup instructs Cilium to enable the FIB lookup bypass
  # optimization for nodeport reverse NAT handling.
  bpf-lb-external-clusterip: "false"

  # Pre-allocation of map entries allows per-packet latency to be reduced, at
  # the expense of up-front memory allocation for the entries in the maps. The
  # default value below will minimize memory usage in the default installation;
  # users who are sensitive to latency may consider setting this to "true".
  #
  # This option was introduced in Cilium 1.4. Cilium 1.3 and earlier ignore
  # this option and behave as though it is set to "true".
  #
  # If this value is modified, then during the next Cilium startup the restore
  # of existing endpoints and tracking of ongoing connections may be disrupted.
  # As a result, reply packets may be dropped and the load-balancing decisions
  # for established connections may change.
  #
  # If this option is set to "false" during an upgrade from 1.3 or earlier to
  # 1.4 or later, then it may cause one-time disruptions during the upgrade.
  preallocate-bpf-maps: "false"

  # Regular expression matching compatible Istio sidecar istio-proxy
  # container image names
  sidecar-istio-proxy-image: "cilium/istio_proxy"

  # Name of the cluster. Only relevant when building a mesh of clusters.
  cluster-name: default
  # Unique ID of the cluster. Must be unique across all conneted clusters and
  # in the range of 1 and 255. Only relevant when building a mesh of clusters.
  cluster-id: ""

  # Encapsulation mode for communication between nodes
  # Possible values:
  #   - disabled
  #   - vxlan (default)
  #   - geneve
  tunnel: vxlan
  # Enables L7 proxy for L7 policy enforcement and visibility
  enable-l7-proxy: "true"

  enable-ipv4-masquerade: "true"
  enable-ipv6-masquerade: "true"
  enable-bpf-masquerade: "false"

  enable-xt-socket-fallback: "true"
  install-iptables-rules: "true"
  install-no-conntrack-iptables-rules: "false"

  auto-direct-node-routes: "false"
  enable-bandwidth-manager: "false"
  enable-local-redirect-policy: "false"

  kube-proxy-replacement:  "partial"
  kube-proxy-replacement-healthz-bind-address: ""
  enable-host-port: "true"
  enable-external-ips: "true"
  enable-node-port: "true"
  enable-health-check-nodeport: "true"
  node-port-bind-protection: "true"
  enable-auto-protect-node-port-range: "true"
  enable-session-affinity: "true"
  enable-l2-neigh-discovery: "true"
  enable-endpoint-health-checking: "true"
  enable-health-checking: "true"
  enable-well-known-identities: "false"
  enable-remote-node-identity: "true"
  operator-api-serve-addr: "127.0.0.1:9234"
  # Enable Hubble gRPC service.
  enable-hubble: "true"
  # UNIX domain socket for Hubble server to listen to.
  hubble-socket-path:  "/var/run/cilium/hubble.sock"
  # An additional address for Hubble server to listen to (e.g. ":4244").
  hubble-listen-address: ":4244"
  hubble-disable-tls: "false"
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  ipam: "kubernetes"
  disable-cnp-status-updates: "true"
  cgroup-root: "/run/cilium/cgroupv2"
  enable-k8s-terminating-endpoint: "true"
---
# Source: cilium/templates/cilium-agent/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/cilium-agent/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - nodes
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  - pods/finalizers
  verbs:
  - get
  - list
  - watch
  - update
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - list
  - watch
  - update
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  # Deprecated for removal in v1.10
  - create
  - list
  - watch
  - update

  # This is used when validating policies in preflight. This will need to stay
  # until we figure out how to avoid "get" inside the preflight, and then
  # should be removed ideally.
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumnetworkpolicies/status
  - ciliumnetworkpolicies/finalizers
  - ciliumclusterwidenetworkpolicies
  - ciliumclusterwidenetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/finalizers
  - ciliumendpoints
  - ciliumendpoints/status
  - ciliumendpoints/finalizers
  - ciliumnodes
  - ciliumnodes/status
  - ciliumnodes/finalizers
  - ciliumidentities
  - ciliumidentities/finalizers
  - ciliumlocalredirectpolicies
  - ciliumlocalredirectpolicies/status
  - ciliumlocalredirectpolicies/finalizers
  - ciliumegressnatpolicies
  - ciliumendpointslices
  verbs:
  - '*'
---
# Source: cilium/templates/cilium-operator/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  # to automatically delete [core|kube]dns pods so that are starting to being
  # managed by Cilium
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform LB IP allocation for BGP
  - services/status
  verbs:
  - update
- apiGroups:
  - ""
  resources:
  # to perform the translation of a CNP that contains `ToGroup` to its endpoints
  - services
  - endpoints
  # to check apiserver connectivity
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumnetworkpolicies/status
  - ciliumnetworkpolicies/finalizers
  - ciliumclusterwidenetworkpolicies
  - ciliumclusterwidenetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/finalizers
  - ciliumendpoints
  - ciliumendpoints/status
  - ciliumendpoints/finalizers
  - ciliumnodes
  - ciliumnodes/status
  - ciliumnodes/finalizers
  - ciliumidentities
  - ciliumendpointslices
  - ciliumidentities/status
  - ciliumidentities/finalizers
  - ciliumlocalredirectpolicies
  - ciliumlocalredirectpolicies/status
  - ciliumlocalredirectpolicies/finalizers
  verbs:
  - '*'
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - update
  - watch
# For cilium-operator running in HA mode.
#
# Cilium operator running in HA mode requires the use of ResourceLock for Leader Election
# between multiple running instances.
# The preferred way of doing this is to use LeasesResourceLock as edits to Leases are less
# common and fewer objects in the cluster watch "all Leases".
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
# Source: cilium/templates/cilium-agent/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/cilium-agent/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: cilium
  namespace: kube-system
  labels:
    k8s-app: cilium
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
  template:
    metadata:
      annotations:
        # This annotation plus the CriticalAddonsOnly toleration makes
        # cilium to be a critical pod in the cluster, which ensures cilium
        # gets priority scheduling.
        # https://kubernetes.io/docs/tasks/administer-cluster/guaranteed-scheduling-critical-addon-pods/
        scheduler.alpha.kubernetes.io/critical-pod: ""
      labels:
        k8s-app: cilium
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
            - matchExpressions:
              - key: beta.kubernetes.io/os
                operator: In
                values:
                - linux
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: k8s-app
                operator: In
                values:
                - cilium
            topologyKey: kubernetes.io/hostname
      containers:
      - name: cilium-agent
        image: "quay.io/cilium/cilium:v1.11.1@sha256:251ff274acf22fd2067b29a31e9fda94253d2961c061577203621583d7e85bd2"
        imagePullPolicy: Never
        command:
        - cilium-agent
        args:
        - --config-dir=/tmp/cilium/config-map
        startupProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9876
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          failureThreshold: 105
          periodSeconds: 2
          successThreshold: 1
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9876
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9876
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 3
          timeoutSeconds: 5
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: cni-chaining-mode
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: custom-cni-conf
              optional: true
        lifecycle:
          postStart:
            exec:
              command:
              - "/cni-install.sh"
              - "--enable-debug=false"
              - "--cni-exclusive=true"
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        securityContext:
          privileged: true
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
        - name: cilium-run
          mountPath: /var/run/cilium
        - name: cni-path
          mountPath: /host/opt/cni/bin
        - name: etc-cni-netd
          mountPath: /host/etc/cni/net.d
        - name: clustermesh-secrets
          mountPath: /var/lib/cilium/clustermesh
          readOnly: true
        - name: cilium-config-path
          mountPath: /tmp/cilium/config-map
          readOnly: true
          # Needed to be able to load kernel modules
        - name: lib-modules
          mountPath: /lib/modules
          readOnly: true
        - name: xtables-lock
          mountPath: /run/xtables.lock
        - name: hubble-tls
          mountPath: /var/lib/cilium/tls/hubble
          readOnly: true
      hostNetwork: true
      initContainers:
      # Required to mount cgroup2 filesystem on the underlying Kubernetes node.
      # We use nsenter command with host's cgroup and mount namespaces enabled.
      - name: mount-cgroup
        image: "quay.io/cilium/cilium:v1.11.1@sha256:251ff274acf22fd2067b29a31e9fda94253d2961c061577203621583d7e85bd2"
        imagePullPolicy: Never
        env:
        - name: CGROUP_ROOT
          value: /run/cilium/cgroupv2
        - name: BIN_PATH
          value: /opt/cni/bin
        command:
        - sh
        - -ec
        # The statically linked Go program binary is invoked to avoid any
        # dependency on utilities like sh and mount that can be missing on certain
        # distros installed on the underlying host. Copy the binary to the
        # same directory where we install cilium cni plugin so that exec permissions
        # are available.
        - |
          cp /usr/bin/cilium-mount /hostbin/cilium-mount;
          nsenter --cgroup=/hostproc/1/ns/cgroup --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-mount" $CGROUP_ROOT;
          rm /hostbin/cilium-mount
        volumeMounts:
        - name: hostproc
          mountPath: /hostproc
        - name: cni-path
          mountPath: /hostbin
        securityContext:
          privileged: true
      - name: clean-cilium-state
        image: "quay.io/cilium/cilium:v1.11.1@sha256:251ff274acf22fd2067b29a31e9fda94253d2961c061577203621583d7e85bd2"
        imagePullPolicy: Never
        command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-state
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-bpf-state
              optional: true
        securityContext:
          privileged: true
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Required to mount cgroup filesystem from the host to cilium agent pod
        - name: cilium-cgroup
          mountPath: /run/cilium/cgroupv2
          mountPropagation: HostToContainer
        - name: cilium-run
          mountPath: /var/run/cilium
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
      restartPolicy: Always
      priorityClassName: system-node-critical
      serviceAccount: "cilium"
      serviceAccountName: "cilium"
      terminationGracePeriodSeconds: 1
      tolerations:
        - operator: Exists
      volumes:
        # To keep state between restarts / upgrades
      - name: cilium-run
        hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        # To keep state between restarts / upgrades for bpf maps
      - name: bpf-maps
        hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
      # To mount cgroup2 filesystem on the host
      - name: hostproc
        hostPath:
          path: /proc
          type: Directory
      # To keep state between restarts / upgrades for cgroup2 filesystem
      - name: cilium-cgroup
        hostPath:
          path: /run/cilium/cgroupv2
          type: DirectoryOrCreate
      # To install cilium cni plugin in the host
      - name: cni-path
        hostPath:
          path:  /opt/cni/bin
          type: DirectoryOrCreate
        # To install cilium cni configuration in the host
      - name: etc-cni-netd
        hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        # To be able to load kernel modules
      - name: lib-modules
        hostPath:
          path: /lib/modules
        # To access iptables concurrently with other processes (e.g. kube-proxy)
      - name: xtables-lock
        hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        # To read the clustermesh configuration
      - name: clustermesh-secrets
        secret:
          secretName: cilium-clustermesh
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          optional: true
        # To read the configuration from the config map
      - name: cilium-config-path
        configMap:
          name: cilium-config
      - name: hubble-tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-server-certs
              optional: true
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
---
# Source: cilium/templates/cilium-operator/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cilium-operator
  namespace: kube-system
  labels:
    io.cilium/app: operator
    name: cilium-operator
spec:
  # See docs on ServerCapabilities.LeasesResourceLock in file pkg/k8s/version/version.go
  # for more details.
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        io.cilium/app: operator
        name: cilium-operator
    spec:
      # In HA mode, cilium-operator pods must not be scheduled on the same
      # node as they will clash with each other.
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: io.cilium/app
                operator: In
                values:
                - operator
            topologyKey: kubernetes.io/hostname
      containers:
      - name: cilium-operator
        image: quay.io/cilium/operator-generic:v1.11.1@sha256:977240a4783c7be821e215ead515da3093a10f4a7baea9f803511a2c2b44a235
        imagePullPolicy: IfNotPresent
        command:
        - cilium-operator-generic
        args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        volumeMounts:
        - name: cilium-config-path
          mountPath: /tmp/cilium/config-map
          readOnly: true
      hostNetwork: true
      restartPolicy: Always
      priorityClassName: system-cluster-critical
      serviceAccount: "cilium-operator"
      serviceAccountName: "cilium-operator"
      tolerations:
        - operator: Exists
      volumes:
        # To read the configuration from the config map
      - name: cilium-config-path
        configMap:
          name: cilium-config

NOTES:
You have successfully installed Cilium with Hubble.

Your release version is 1.11.1.

For any further help, visit https://docs.cilium.io/en/v1.11/gettinghelp
